/*
 * IndexerFrameOLD.java
 *
 * Created on 8 Σεπτέμβριος 2006, 5:46 μμ
 */

package puggle.ui;

import java.io.FileNotFoundException;
import javax.swing.JOptionPane;
import puggle.Indexer.Indexer;
import puggle.Indexer.PropertiesControl;
import puggle.Resources.Resources;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.Date;

/**
 *
 * @author  gvasil
 */
public class IndexerFrameOLD extends javax.swing.JFrame {
    
    /**
     * Creates new form IndexerFrameOLD
     */
    public IndexerFrameOLD(String indexDirPath) {
        File dataDir = null, indexDir = null;
        File[] dataDirsFile = null;
        
        this.propertiesControl = PropertiesControl.getPropertiesControl();
        
        dataDirsFile = this.propertiesControl.getDataDirectories();
        
        initComponents();
        
        indexDir = new File(indexDirPath);
        
        File logFile = null;
        PrintStream logStream = null;
        
        try {
            logFile = Resources.getLogFile();
            logStream = new PrintStream(new FileOutputStream(logFile));
        } catch (IOException ex) {
            //ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Using standard output for logging.",
                    ex.getMessage(), JOptionPane.INFORMATION_MESSAGE);
            logStream = System.out;
        }
        
        JLogger logger = new JLogger(logStream, textArea);

        try {
            this.indexer = new Indexer(dataDirsFile, indexDir, logger);
        } catch (IOException ex) {
            //ex.printStackTrace();
            int opt = JOptionPane.showConfirmDialog(this, "Force unlock?",
                    ex.getMessage(), JOptionPane.YES_NO_OPTION);

            if (opt == JOptionPane.YES_OPTION) {
                try {
                    this.indexer = new Indexer(dataDirsFile, indexDir, logger, true);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(),
                            "Unspecified error", JOptionPane.ERROR_MESSAGE);
                }
                JOptionPane.showMessageDialog(this, "Index successfully unlocked",
                        "Report", JOptionPane.INFORMATION_MESSAGE);
            } else if (opt == JOptionPane.NO_OPTION) {
                System.exit(1);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        startButton = new java.awt.Button();
        stopButton = new java.awt.Button();
        textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Indexer");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setName("Indexer");
        setResizable(false);
        startButton.setLabel("Start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButtonMouseClicked(evt);
            }
        });

        stopButton.setActionCommand("Stop");
        stopButton.setEnabled(false);
        stopButton.setLabel("Stop");
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopButtonMouseClicked(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setEditable(false);
        textArea.setLineWrap(true);
        textArea.setRows(5);
        textArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        textArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        textArea.setEnabled(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(textArea, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(startButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(stopButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(textArea, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(startButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(stopButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseClicked
        this.indexer.stop();
        this.startButton.setEnabled(true);
        this.stopButton.setEnabled(false);
    }//GEN-LAST:event_stopButtonMouseClicked

    private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
        this.startButton.setEnabled(false);
        this.stopButton.setEnabled(true);
        this.IndexerThread = new Thread(this.indexer);
        this.IndexerThread.start();
    }//GEN-LAST:event_startButtonMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IndexerFrameOLD(Resources.getIndexDirPath()).setVisible(true);
            }
        });
    }
    
    private PropertiesControl propertiesControl;
    
    private Thread IndexerThread;
    private Indexer indexer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button startButton;
    private java.awt.Button stopButton;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
    
}
