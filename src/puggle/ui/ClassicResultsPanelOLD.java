/*
 * ClassicResultsPanelOLD.java
 *
 * Created on 16 March 2007, 8:51 μμ
 */

package puggle.ui;

import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.text.html.HTMLEditorKit;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.search.Hits;
import org.apache.lucene.search.Query;
import puggle.LexicalAnalyzer.FileHandler;
import puggle.LexicalAnalyzer.FileHandlerException;

/**
 *
 * @author  gvasil
 */
public class ClassicResultsPanelOLD extends ResultsPanel {
    
    /**
     * Creates new form ClassicResultsPanelOLD
     */
    public ClassicResultsPanelOLD() {
        this.imageControl = ImageControl.getImageControl();
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        mainPanel = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        iconLabel1 = new javax.swing.JLabel();
        titleLabel1 = new javax.swing.JLabel();
        pathLabel1 = new javax.swing.JLabel();
        sizeLabel1 = new javax.swing.JLabel();
        scoreLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPane1 = new javax.swing.JTextPane();
        panel2 = new javax.swing.JPanel();
        iconLabel2 = new javax.swing.JLabel();
        titleLabel2 = new javax.swing.JLabel();
        pathLabel2 = new javax.swing.JLabel();
        sizeLabel2 = new javax.swing.JLabel();
        scoreLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPane2 = new javax.swing.JTextPane();
        panel3 = new javax.swing.JPanel();
        iconLabel3 = new javax.swing.JLabel();
        titleLabel3 = new javax.swing.JLabel();
        pathLabel3 = new javax.swing.JLabel();
        sizeLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textPane3 = new javax.swing.JTextPane();
        scoreLabel3 = new javax.swing.JLabel();
        panel4 = new javax.swing.JPanel();
        iconLabel4 = new javax.swing.JLabel();
        titleLabel4 = new javax.swing.JLabel();
        pathLabel4 = new javax.swing.JLabel();
        sizeLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textPane4 = new javax.swing.JTextPane();
        scoreLabel4 = new javax.swing.JLabel();
        panel5 = new javax.swing.JPanel();
        iconLabel5 = new javax.swing.JLabel();
        titleLabel5 = new javax.swing.JLabel();
        pathLabel5 = new javax.swing.JLabel();
        sizeLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        textPane5 = new javax.swing.JTextPane();
        scoreLabel5 = new javax.swing.JLabel();
        panel6 = new javax.swing.JPanel();
        iconLabel6 = new javax.swing.JLabel();
        titleLabel6 = new javax.swing.JLabel();
        pathLabel6 = new javax.swing.JLabel();
        sizeLabel6 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        textPane6 = new javax.swing.JTextPane();
        scoreLabel6 = new javax.swing.JLabel();
        panel7 = new javax.swing.JPanel();
        iconLabel7 = new javax.swing.JLabel();
        titleLabel7 = new javax.swing.JLabel();
        pathLabel7 = new javax.swing.JLabel();
        sizeLabel7 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        textPane7 = new javax.swing.JTextPane();
        scoreLabel7 = new javax.swing.JLabel();
        panel8 = new javax.swing.JPanel();
        iconLabel8 = new javax.swing.JLabel();
        titleLabel8 = new javax.swing.JLabel();
        pathLabel8 = new javax.swing.JLabel();
        sizeLabel8 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        textPane8 = new javax.swing.JTextPane();
        scoreLabel8 = new javax.swing.JLabel();
        panel9 = new javax.swing.JPanel();
        iconLabel9 = new javax.swing.JLabel();
        titleLabel9 = new javax.swing.JLabel();
        pathLabel9 = new javax.swing.JLabel();
        sizeLabel9 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        textPane9 = new javax.swing.JTextPane();
        scoreLabel9 = new javax.swing.JLabel();

        mainPanel.setAlignmentX(0.0F);
        mainPanel.setAlignmentY(0.0F);
        mainPanel.setMaximumSize(new java.awt.Dimension(10, 10));
        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setAlignmentX(0.0F);
        panel1.setAlignmentY(0.0F);
        panel1.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel1.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel1.setAlignmentY(0.0F);
        iconLabel1.setOpaque(true);
        iconLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel1MouseExited(evt);
            }
        });

        titleLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel1.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel1titleLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel1MouseExited(evt);
            }
        });

        pathLabel1.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel1.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel1.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel1.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel1MouseExited(evt);
            }
        });

        sizeLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel1.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(4, 4));
        textPane1.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane1.setEditorKit(new HTMLEditorKit());
        jScrollPane1.setViewportView(textPane1);

        org.jdesktop.layout.GroupLayout panel1Layout = new org.jdesktop.layout.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel1Layout.createSequentialGroup()
                .add(iconLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel1Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(titleLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel1)
                        .add(6, 6, 6)
                        .add(scoreLabel1))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(iconLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
            .add(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(panel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sizeLabel1)
                    .add(titleLabel1)
                    .add(scoreLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pathLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        panel2.setBackground(new java.awt.Color(255, 255, 255));
        panel2.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel2.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel2.setOpaque(true);
        iconLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel2MouseExited(evt);
            }
        });

        titleLabel2.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel2.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel2MouseExited(evt);
            }
        });

        pathLabel2.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel2.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel2.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel2.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel2.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel2MouseExited(evt);
            }
        });

        sizeLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel2.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane2.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane2.setEditorKit(new HTMLEditorKit());
        jScrollPane2.setViewportView(textPane2);

        org.jdesktop.layout.GroupLayout panel2Layout = new org.jdesktop.layout.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel2Layout.createSequentialGroup()
                .add(iconLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel2Layout.createSequentialGroup()
                        .add(titleLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel2))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
            .add(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(panel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(titleLabel2)
                    .add(sizeLabel2)
                    .add(scoreLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pathLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        panel3.setBackground(new java.awt.Color(255, 255, 255));
        panel3.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel3.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel3.setOpaque(true);
        iconLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel3MouseExited(evt);
            }
        });

        titleLabel3.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel3.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel3MouseExited(evt);
            }
        });

        pathLabel3.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel3.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel3.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel3.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel3.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel3MouseExited(evt);
            }
        });

        sizeLabel3.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel3.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane3.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane3.setEditorKit(new HTMLEditorKit());
        jScrollPane3.setViewportView(textPane3);

        org.jdesktop.layout.GroupLayout panel3Layout = new org.jdesktop.layout.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel3Layout.createSequentialGroup()
                .add(iconLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel3Layout.createSequentialGroup()
                        .add(titleLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel3))
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
            .add(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(panel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(titleLabel3)
                    .add(sizeLabel3)
                    .add(scoreLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pathLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        panel4.setBackground(new java.awt.Color(255, 255, 255));
        panel4.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel4.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel4.setOpaque(true);
        iconLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel4MouseExited(evt);
            }
        });

        titleLabel4.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel4.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel4MouseExited(evt);
            }
        });

        pathLabel4.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel4.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel4.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel4.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel4.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel4MouseExited(evt);
            }
        });

        sizeLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel4.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane4.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane4.setEditorKit(new HTMLEditorKit());
        jScrollPane4.setViewportView(textPane4);

        org.jdesktop.layout.GroupLayout panel4Layout = new org.jdesktop.layout.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel4Layout.createSequentialGroup()
                .add(iconLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel4Layout.createSequentialGroup()
                        .add(titleLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel4))
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .add(panel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(panel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(titleLabel4)
                        .add(sizeLabel4)
                        .add(scoreLabel4))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(pathLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        panel5.setBackground(new java.awt.Color(255, 255, 255));
        panel5.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel5.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel5.setOpaque(true);
        iconLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel5MouseExited(evt);
            }
        });

        titleLabel5.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel5.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel5MouseExited(evt);
            }
        });

        pathLabel5.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel5.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel5.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel5.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel5.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel5MouseExited(evt);
            }
        });

        sizeLabel5.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel5.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane5.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane5.setEditorKit(new HTMLEditorKit());
        jScrollPane5.setViewportView(textPane5);

        org.jdesktop.layout.GroupLayout panel5Layout = new org.jdesktop.layout.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel5Layout.createSequentialGroup()
                .add(iconLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel5Layout.createSequentialGroup()
                        .add(titleLabel5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel5))
                    .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .add(panel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(panel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(titleLabel5)
                        .add(sizeLabel5)
                        .add(scoreLabel5))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(pathLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        panel6.setBackground(new java.awt.Color(255, 255, 255));
        panel6.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel6.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel6.setOpaque(true);
        iconLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel6MouseExited(evt);
            }
        });

        titleLabel6.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel6.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel6MouseExited(evt);
            }
        });

        pathLabel6.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel6.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel6.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel6.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel6.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel6MouseExited(evt);
            }
        });

        sizeLabel6.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel6.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane6.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane6.setBorder(null);
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane6.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane6.setEditorKit(new HTMLEditorKit());
        jScrollPane6.setViewportView(textPane6);

        org.jdesktop.layout.GroupLayout panel6Layout = new org.jdesktop.layout.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel6Layout.createSequentialGroup()
                .add(iconLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel6Layout.createSequentialGroup()
                        .add(titleLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel6))
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .add(panel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(panel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(titleLabel6)
                        .add(sizeLabel6)
                        .add(scoreLabel6))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(pathLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        panel7.setBackground(new java.awt.Color(255, 255, 255));
        panel7.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel7.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel7.setOpaque(true);
        iconLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel7MouseExited(evt);
            }
        });

        titleLabel7.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel7.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel7MouseExited(evt);
            }
        });

        pathLabel7.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel7.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel7.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel7.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel7.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel7.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel7MouseExited(evt);
            }
        });

        sizeLabel7.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel7.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane7.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane7.setBorder(null);
        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane7.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane7.setEditorKit(new HTMLEditorKit());
        jScrollPane7.setViewportView(textPane7);

        org.jdesktop.layout.GroupLayout panel7Layout = new org.jdesktop.layout.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel7Layout.createSequentialGroup()
                .add(iconLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel7Layout.createSequentialGroup()
                        .add(titleLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel7))
                    .add(jScrollPane7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .add(panel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(panel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(titleLabel7)
                        .add(sizeLabel7)
                        .add(scoreLabel7))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(pathLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        panel8.setBackground(new java.awt.Color(255, 255, 255));
        panel8.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel8.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel8.setOpaque(true);
        iconLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel8MouseExited(evt);
            }
        });

        titleLabel8.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel8.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel8MouseExited(evt);
            }
        });

        pathLabel8.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel8.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel8.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel8.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel8.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel8.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel8MouseExited(evt);
            }
        });

        sizeLabel8.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel8.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane8.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane8.setBorder(null);
        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane8.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane8.setEditorKit(new HTMLEditorKit());
        jScrollPane8.setViewportView(textPane8);

        org.jdesktop.layout.GroupLayout panel8Layout = new org.jdesktop.layout.GroupLayout(panel8);
        panel8.setLayout(panel8Layout);
        panel8Layout.setHorizontalGroup(
            panel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel8Layout.createSequentialGroup()
                .add(iconLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel8Layout.createSequentialGroup()
                        .add(titleLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel8))
                    .add(jScrollPane8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel8Layout.setVerticalGroup(
            panel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .add(panel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(panel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(titleLabel8)
                        .add(sizeLabel8)
                        .add(scoreLabel8))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(pathLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jScrollPane8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        panel9.setBackground(new java.awt.Color(255, 255, 255));
        panel9.setMaximumSize(new java.awt.Dimension(10, 10));
        iconLabel9.setBackground(new java.awt.Color(207, 215, 227));
        iconLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel9.setOpaque(true);
        iconLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconLabel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconLabel9MouseExited(evt);
            }
        });

        titleLabel9.setFont(new java.awt.Font("Tahoma", 1, 14));
        titleLabel9.setForeground(new java.awt.Color(41, 89, 140));
        titleLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleLabel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleLabel9MouseExited(evt);
            }
        });

        pathLabel9.setBackground(new java.awt.Color(255, 255, 255));
        pathLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        pathLabel9.setForeground(new java.awt.Color(0, 102, 51));
        pathLabel9.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        pathLabel9.setMinimumSize(new java.awt.Dimension(6, 20));
        pathLabel9.setPreferredSize(new java.awt.Dimension(6, 20));
        pathLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pathLabel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pathLabel9MouseExited(evt);
            }
        });

        sizeLabel9.setFont(new java.awt.Font("Tahoma", 0, 10));
        sizeLabel9.setForeground(new java.awt.Color(0, 102, 51));

        jScrollPane9.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane9.setBorder(null);
        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        textPane9.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        textPane9.setEditorKit(new HTMLEditorKit());
        jScrollPane9.setViewportView(textPane9);

        org.jdesktop.layout.GroupLayout panel9Layout = new org.jdesktop.layout.GroupLayout(panel9);
        panel9.setLayout(panel9Layout);
        panel9Layout.setHorizontalGroup(
            panel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel9Layout.createSequentialGroup()
                .add(iconLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel9Layout.createSequentialGroup()
                        .add(titleLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sizeLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scoreLabel9))
                    .add(jScrollPane9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .add(pathLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel9Layout.setVerticalGroup(
            panel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.BASELINE, iconLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .add(panel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(panel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(titleLabel9)
                        .add(sizeLabel9)
                        .add(scoreLabel9))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(pathLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jScrollPane9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(panel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(panel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(panel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(panel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(panel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, panel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(panel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(panel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(panel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(panel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void titleLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel1MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel1.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel1MouseClicked

    private void titleLabel1titleLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel1titleLabelMouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel1.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel1titleLabelMouseEntered

    private void titleLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel1MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel1MouseExited

    int i = 0;
    private void pathLabel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel9MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel9MouseExited

    private void pathLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel9MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel9.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel9MouseEntered

    private void pathLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel9MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel9.getToolTipText()));
        }
    }//GEN-LAST:event_pathLabel9MouseClicked

    private void titleLabel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel9MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel9.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel9MouseExited

    private void titleLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel9MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel9.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel9MouseEntered

    private void titleLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel9MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel9.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel9MouseClicked

    private void iconLabel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel9MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel9MouseExited

    private void iconLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel9MouseEntered
        if (iconLabel9.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel9MouseEntered

    private void iconLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel9MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel9.getToolTipText()));
        }
    }//GEN-LAST:event_iconLabel9MouseClicked

    private void pathLabel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel8MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel8.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel8MouseExited

    private void pathLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel8MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel8.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel8MouseEntered

    private void pathLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel8MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel8.getToolTipText()));
        }
    }//GEN-LAST:event_pathLabel8MouseClicked

    private void titleLabel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel8MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel8.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel8MouseExited

    private void titleLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel8MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel8.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel8MouseEntered

    private void titleLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel8MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel8.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel8MouseClicked

    private void iconLabel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel8MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel8MouseExited

    private void iconLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel8MouseEntered
        if (iconLabel8.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel8MouseEntered

    private void iconLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel8MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel8.getToolTipText()));
        }
    }//GEN-LAST:event_iconLabel8MouseClicked

    private void pathLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel7MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel7.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel7MouseExited

    private void pathLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel7MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel7MouseEntered

    private void pathLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel7MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel7.getToolTipText() +"\""));
        }
    }//GEN-LAST:event_pathLabel7MouseClicked

    private void titleLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel7MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel7.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel7MouseExited

    private void titleLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel7MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel7.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel7MouseEntered

    private void titleLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel7MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel7.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel7MouseClicked

    private void iconLabel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel7MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel7MouseExited

    private void iconLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel7MouseEntered
        if (iconLabel7.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel7MouseEntered

    private void iconLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel7MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel7.getToolTipText()));
        }
    }//GEN-LAST:event_iconLabel7MouseClicked

    private void pathLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel6MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel6MouseExited

    private void pathLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel6MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel6MouseEntered

    private void pathLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel6MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel6.getToolTipText()));
        }
    }//GEN-LAST:event_pathLabel6MouseClicked

    private void titleLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel6MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel6.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel6MouseExited

    private void titleLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel6MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel6.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel6MouseEntered

    private void titleLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel6MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel6.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel6MouseClicked

    private void iconLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel6MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel6MouseExited

    private void iconLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel6MouseEntered
        if (iconLabel6.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel6MouseEntered

    private void iconLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel6MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel6.getToolTipText()));
        }
    }//GEN-LAST:event_iconLabel6MouseClicked

    private void pathLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel5MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel5MouseExited

    private void pathLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel5MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel5MouseEntered

    private void pathLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel5MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel5.getToolTipText()));
        }
    }//GEN-LAST:event_pathLabel5MouseClicked

    private void titleLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel5MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel5.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel5MouseExited

    private void titleLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel5MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel5.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel5MouseEntered

    private void titleLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel5MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel5.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel5MouseClicked

    private void iconLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel5MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel5MouseExited

    private void iconLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel5MouseEntered
        if (iconLabel5.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel5MouseEntered

    private void iconLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel5MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel5.getToolTipText()));
        }
    }//GEN-LAST:event_iconLabel5MouseClicked

    private void pathLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel4MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel4MouseExited

    private void pathLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel4MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel4MouseEntered

    private void pathLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel4MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel4.getToolTipText()));
        }
    }//GEN-LAST:event_pathLabel4MouseClicked

    private void titleLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel4MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel4.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel4MouseExited

    private void titleLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel4MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel4.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel4MouseEntered

    private void titleLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel4MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel4.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel4MouseClicked

    private void iconLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel4MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel4MouseExited

    private void iconLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel4MouseEntered
        if (iconLabel4.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel4MouseEntered

    private void iconLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel4MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            try {
                this.executeFile(new File(titleLabel4.getToolTipText()));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE, this.imageControl.getErrorIcon());
            }
        }
    }//GEN-LAST:event_iconLabel4MouseClicked

    private void pathLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel3MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel3MouseExited

    private void pathLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel3MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel3MouseEntered

    private void pathLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel3MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel3.getToolTipText()));
        }
    }//GEN-LAST:event_pathLabel3MouseClicked

    private void titleLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel3MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel3.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel3MouseExited

    private void titleLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel3MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel3.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel3MouseEntered

    private void titleLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel3MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel3.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel3MouseClicked

    private void iconLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel3MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel3MouseExited

    private void iconLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel3MouseEntered
        if (iconLabel3.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel3MouseEntered

    private void iconLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel3MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel3.getToolTipText()));
        }
    }//GEN-LAST:event_iconLabel3MouseClicked

    private void pathLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel2MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel2MouseExited

    private void pathLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel2MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel2MouseEntered

    private void pathLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel2MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel2.getToolTipText()));
        }
    }//GEN-LAST:event_pathLabel2MouseClicked

    private void titleLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel2MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titleLabel2.setFont(new java.awt.Font("Tahoma", 1, 14));
    }//GEN-LAST:event_titleLabel2MouseExited

    private void titleLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel2MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        titleLabel2.setFont(new java.awt.Font("Tahoma", 1, 15));
    }//GEN-LAST:event_titleLabel2MouseEntered

    private void titleLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleLabel2MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel2.getToolTipText()));
        }
    }//GEN-LAST:event_titleLabel2MouseClicked

    private void iconLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel2MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel2MouseExited

    private void iconLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel2MouseEntered
        if (iconLabel2.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel2MouseEntered

    private void iconLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel2MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(titleLabel2.getToolTipText()));
        }
    }//GEN-LAST:event_iconLabel2MouseClicked

    private void pathLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel1MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pathLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
    }//GEN-LAST:event_pathLabel1MouseExited

    private void pathLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel1MouseEntered
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pathLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
    }//GEN-LAST:event_pathLabel1MouseEntered

    private void pathLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathLabel1MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            this.executeFile(new File(pathLabel1.getToolTipText()));
        } else if (button == java.awt.event.MouseEvent.BUTTON2) {
            ;
        }
    }//GEN-LAST:event_pathLabel1MouseClicked

    private void iconLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel1MouseExited
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_iconLabel1MouseExited

    private void iconLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel1MouseEntered
        if (iconLabel1.getIcon() != null) {
            setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        }
    }//GEN-LAST:event_iconLabel1MouseEntered

    private void iconLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLabel1MouseClicked
        int button = evt.getButton();
        if (button == java.awt.event.MouseEvent.BUTTON1) {
            try {
                this.executeFile(new File(titleLabel1.getToolTipText()));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE, this.imageControl.getErrorIcon());
            }
        }
    }//GEN-LAST:event_iconLabel1MouseClicked
    
    private void executeFile(File file) {
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE,
                        this.imageControl.getErrorIcon());
                /*javax.swing.JTextArea t = new javax.swing.JTextArea();
                t.setText("test");
                javax.swing.JFrame fr = new javax.swing.JFrame();
                fr.add(t);
                fr.pack();
                fr.setVisible(true);*/
        }
        
        /*
        try {
            String cmd = null;
            if (file.isDirectory()) {
                cmd = "explorer \"" + file.getCanonicalPath() + "\"";
            } else {
                cmd = "cmd /c \"" + file.getCanonicalPath() + "\"";
            }
            Runtime.getRuntime().exec(cmd);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
         */
    }
    
    private void printCurrentHits() {
        Document doc;
        Icon icon;
        sun.awt.shell.ShellFolder sf;
        String title = null, path = null, folder = null;
        long size;
        int score;
        
        try {
            if (this.currHits < this.totalHits) {
                printHit(this.hits.doc(currHits),
                        (int)Math.ceil(this.hits.score(currHits) * 10) / 2,
                        titleLabel1, scoreLabel1, pathLabel1, sizeLabel1,
                        iconLabel1);
            } else {
                titleLabel1.setText(""); titleLabel1.setToolTipText("");
                scoreLabel1.setIcon(null); pathLabel1.setText("");
                pathLabel1.setToolTipText(""); sizeLabel1.setText("");
                textPane1.setText(""); iconLabel1.setIcon(null);
                iconLabel1.setText("");
            }
            
            if (this.currHits + 1 < this.totalHits) {
                printHit(this.hits.doc(currHits + 1),
                        (int)Math.ceil(this.hits.score(currHits + 1) * 10) / 2,
                        titleLabel2, scoreLabel2, pathLabel2, sizeLabel2,
                        iconLabel2);
            } else {
                titleLabel2.setText(""); titleLabel2.setToolTipText("");
                scoreLabel2.setIcon(null); pathLabel2.setText("");
                pathLabel2.setToolTipText(""); sizeLabel2.setText("");
                textPane2.setText(""); iconLabel2.setIcon(null);
                iconLabel2.setText("");
            }

            if (currHits + 2 < totalHits) {
                printHit(this.hits.doc(currHits + 2),
                        (int)Math.ceil(this.hits.score(currHits + 2) * 10) / 2,
                        titleLabel3, scoreLabel3, pathLabel3, sizeLabel3,
                        iconLabel3);
            } else {
                titleLabel3.setText(""); titleLabel3.setToolTipText("");
                scoreLabel3.setIcon(null); pathLabel3.setText("");
                pathLabel3.setToolTipText(""); sizeLabel3.setText("");
                textPane3.setText(""); iconLabel3.setIcon(null);
                iconLabel3.setText("");
            }
            
            if (currHits + 3 < totalHits) {
                printHit(this.hits.doc(currHits + 3),
                        (int)Math.ceil(this.hits.score(currHits + 3) * 10) / 2,
                        titleLabel4, scoreLabel4, pathLabel4, sizeLabel4,
                        iconLabel4);
            } else {
                titleLabel4.setText(""); titleLabel4.setToolTipText("");
                scoreLabel4.setIcon(null); pathLabel4.setText("");
                pathLabel4.setToolTipText(""); sizeLabel4.setText("");
                textPane4.setText(""); iconLabel4.setIcon(null);
                iconLabel4.setText("");
            }
            
            if (currHits + 4 < totalHits) {
                printHit(this.hits.doc(currHits + 4),
                        (int)Math.ceil(this.hits.score(currHits + 4) * 10) / 2,
                        titleLabel5, scoreLabel5, pathLabel5, sizeLabel5,
                        iconLabel5);
            } else {
                titleLabel5.setText(""); titleLabel5.setToolTipText("");
                scoreLabel5.setIcon(null); pathLabel5.setText("");
                pathLabel5.setToolTipText(""); sizeLabel5.setText("");
                textPane5.setText(""); iconLabel5.setIcon(null);
                iconLabel5.setText("");
            }
            
            if (currHits + 5 < totalHits) {
                printHit(this.hits.doc(currHits + 5),
                        (int)Math.ceil(this.hits.score(currHits + 5) * 10) / 2,
                        titleLabel6, scoreLabel6, pathLabel6, sizeLabel6,
                        iconLabel6);
            } else {
                titleLabel6.setText(""); titleLabel6.setToolTipText("");
                scoreLabel6.setIcon(null); pathLabel6.setText("");
                pathLabel6.setToolTipText(""); sizeLabel6.setText("");
                textPane6.setText(""); iconLabel6.setIcon(null);
                iconLabel6.setText("");
            }
            
            if (currHits + 6 < totalHits) {
                printHit(this.hits.doc(currHits + 6),
                        (int)Math.ceil(this.hits.score(currHits + 6) * 10) / 2,
                        titleLabel7, scoreLabel7, pathLabel7, sizeLabel7,
                        iconLabel7);
            } else {
                titleLabel7.setText(""); titleLabel7.setToolTipText("");
                scoreLabel7.setIcon(null); pathLabel7.setText("");
                pathLabel7.setToolTipText(""); sizeLabel7.setText("");
                textPane7.setText(""); iconLabel7.setIcon(null);
                iconLabel7.setText("");
            }
                
            if (currHits + 7 < totalHits) {
                printHit(this.hits.doc(currHits + 7),
                        (int)Math.ceil(this.hits.score(currHits + 7) * 10) / 2,
                        titleLabel8, scoreLabel8, pathLabel8, sizeLabel8,
                        iconLabel8);
            } else {
                titleLabel8.setText(""); titleLabel8.setToolTipText("");
                scoreLabel8.setIcon(null); pathLabel8.setText("");
                pathLabel8.setToolTipText(""); sizeLabel8.setText("");
                textPane8.setText(""); iconLabel8.setIcon(null);
                iconLabel8.setText("");
            }
            
            if (currHits + 8 < totalHits) {
                printHit(this.hits.doc(currHits + 8),
                        (int)Math.ceil(this.hits.score(currHits + 8) * 10) / 2,
                        titleLabel9, scoreLabel9, pathLabel9, sizeLabel9,
                        iconLabel9);
            } else {
                titleLabel9.setText(""); titleLabel9.setToolTipText("");
                scoreLabel9.setIcon(null); pathLabel9.setText("");
                pathLabel9.setToolTipText(""); sizeLabel9.setText("");
                textPane9.setText(""); iconLabel9.setIcon(null);
                iconLabel9.setText("");
            }

//            JScrollBar bar = this.scrollPane.getVerticalScrollBar();
//            bar.setValue(bar.getMinimum());
            
            //pack();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
        this.printCurrentFragments();
    }
    
    private void printHit(Document doc, int score, JLabel titleLabel, JLabel scoreLabel,
            JLabel pathLabel, JLabel sizeLabel, JLabel iconLabel) {
        String title = doc.get("title");
        String path = doc.get("path");
        long size = Long.parseLong(doc.get("size"));
        if (title == null || title.trim().compareTo("") == 0) {
            title = path.substring(path.lastIndexOf(File.separatorChar) + 1);
        }
        titleLabel.setText(title);
        titleLabel.setToolTipText(path);
        scoreLabel.setIcon(this.imageControl.getStarsIcon(score));
        String folder = path.substring(0, path.lastIndexOf(File.separatorChar) + 1);
        pathLabel.setText(folder);
        pathLabel.setToolTipText(folder);
        sizeLabel.setText(Util.adjustSize(size));
        
        try {
            ImageIcon icon = FileHandler.getThumbnail(doc);
            iconLabel.setText("");
            iconLabel.setIcon(icon);
        } catch (FileHandlerException e) {
            iconLabel.setForeground(Color.RED);
            iconLabel.setText("File not found");
            iconLabel.setIcon(null);
        }
    }
    
    private void printCurrentFragments() {
        Document doc;
        try {
            if (this.currHits < this.totalHits) {
                doc = this.hits.doc(currHits);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane1.setText(f);
            } else {
                textPane1.setText("");
            }
            
            if (this.currHits + 1 < this.totalHits) {
                doc = this.hits.doc(currHits + 1);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane2.setText(f);
            } else {
                textPane2.setText("");
            }
            
            if (this.currHits + 2 < this.totalHits) {
                doc = this.hits.doc(currHits + 2);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane3.setText(f);
            } else {
                textPane3.setText("");
            }
            
            if (this.currHits + 3 < this.totalHits) {
                doc = this.hits.doc(currHits + 3);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane4.setText(f);
            } else {
                textPane4.setText("");
            }
            
            if (this.currHits + 4 < this.totalHits) {
                doc = this.hits.doc(currHits + 4);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane5.setText(f);
            } else {
                textPane5.setText("");
            }
            
            if (this.currHits + 5 < this.totalHits) {
                doc = this.hits.doc(currHits + 5);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane6.setText(f);
            } else {
                textPane6.setText("");
            }
            
            if (this.currHits + 6 < this.totalHits) {
                doc = this.hits.doc(currHits + 6);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane7.setText(f);
            } else {
                textPane7.setText("");
            }
            
            if (this.currHits + 7 < this.totalHits) {
                doc = this.hits.doc(currHits + 7);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane8.setText(f);
            } else {
                textPane8.setText("");
            }
            
            if (this.currHits + 8 < this.totalHits) {
                doc = this.hits.doc(currHits + 8);
                String f = doc.get("fragment");
                if (f == null) {
                    f = Util.getFragment(doc, query);
                    doc.removeField("text");
                    doc.add(new Field("fragment", f, Field.Store.YES,
                    Field.Index.NO, Field.TermVector.NO));
                }
                textPane9.setText(f);
            } else {
                textPane9.setText("");
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    public void setResults(Query query, Hits hits) {
        this.hits = hits;
        this.query = query;
        this.currHits = 0;
        this.totalHits = hits.length();
        this.printCurrentHits();
    }
    
    public int getCurrentResultsNumber() {
        return (this.currHits);
    }
    
    public int getTotalResultsNumber() {
        return (this.totalHits);
    }
    
    public boolean hasPreviousResults() {
        return (this.currHits - 9 >= 0);
    }
    
    public boolean hasNextResults() {
        return (this.currHits + 9 < this.totalHits);
    }
    
    public boolean nextResults() {
        if (this.hasNextResults()) {
            this.currHits += 9;
            this.printCurrentHits();
            return true;
        }
        return false;
    }
    
    public boolean previousResults() {
        if (this.hasPreviousResults()) {
            this.currHits -= 9;
            this.printCurrentHits();
            return true;
        }
        return false;
    }
    
    private ImageControl imageControl;
    private Hits hits;
    private Query query;
    
    private int currHits;
    private int totalHits;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconLabel1;
    private javax.swing.JLabel iconLabel2;
    private javax.swing.JLabel iconLabel3;
    private javax.swing.JLabel iconLabel4;
    private javax.swing.JLabel iconLabel5;
    private javax.swing.JLabel iconLabel6;
    private javax.swing.JLabel iconLabel7;
    private javax.swing.JLabel iconLabel8;
    private javax.swing.JLabel iconLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    private javax.swing.JPanel panel6;
    private javax.swing.JPanel panel7;
    private javax.swing.JPanel panel8;
    private javax.swing.JPanel panel9;
    private javax.swing.JLabel pathLabel1;
    private javax.swing.JLabel pathLabel2;
    private javax.swing.JLabel pathLabel3;
    private javax.swing.JLabel pathLabel4;
    private javax.swing.JLabel pathLabel5;
    private javax.swing.JLabel pathLabel6;
    private javax.swing.JLabel pathLabel7;
    private javax.swing.JLabel pathLabel8;
    private javax.swing.JLabel pathLabel9;
    private javax.swing.JLabel scoreLabel1;
    private javax.swing.JLabel scoreLabel2;
    private javax.swing.JLabel scoreLabel3;
    private javax.swing.JLabel scoreLabel4;
    private javax.swing.JLabel scoreLabel5;
    private javax.swing.JLabel scoreLabel6;
    private javax.swing.JLabel scoreLabel7;
    private javax.swing.JLabel scoreLabel8;
    private javax.swing.JLabel scoreLabel9;
    private javax.swing.JLabel sizeLabel1;
    private javax.swing.JLabel sizeLabel2;
    private javax.swing.JLabel sizeLabel3;
    private javax.swing.JLabel sizeLabel4;
    private javax.swing.JLabel sizeLabel5;
    private javax.swing.JLabel sizeLabel6;
    private javax.swing.JLabel sizeLabel7;
    private javax.swing.JLabel sizeLabel8;
    private javax.swing.JLabel sizeLabel9;
    private javax.swing.JTextPane textPane1;
    private javax.swing.JTextPane textPane2;
    private javax.swing.JTextPane textPane3;
    private javax.swing.JTextPane textPane4;
    private javax.swing.JTextPane textPane5;
    private javax.swing.JTextPane textPane6;
    private javax.swing.JTextPane textPane7;
    private javax.swing.JTextPane textPane8;
    private javax.swing.JTextPane textPane9;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JLabel titleLabel2;
    private javax.swing.JLabel titleLabel3;
    private javax.swing.JLabel titleLabel4;
    private javax.swing.JLabel titleLabel5;
    private javax.swing.JLabel titleLabel6;
    private javax.swing.JLabel titleLabel7;
    private javax.swing.JLabel titleLabel8;
    private javax.swing.JLabel titleLabel9;
    // End of variables declaration//GEN-END:variables
    
}
